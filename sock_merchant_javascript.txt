'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}


function sock_pair(n, ar) {
let asec_arr=ar.sort();
  var i=0;
  var num=0;
  while(i<n-1)
  {
      if(asec_arr[i]===asec_arr[i+1]) 
      {
          num+=1;
          i+=1;
      }
      i+=1;
  }
return num;
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const n = parseInt(readLine(), 10);

    const ar = readLine().split(' ').map(arTemp => parseInt(arTemp, 10));

    let result = sock_pair(n, ar);

    ws.write(result + "\n");

    ws.end();
}
